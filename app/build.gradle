/*
 * Copyright (c) 2016, University of Oslo
 *
 * All rights reserved.
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this
 * list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 * Neither the name of the HISP project nor the names of its contributors may
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'io.fabric'

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

android {
    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId cfg.package
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode cfg.versionCode
        versionName cfg.versionName

        multiDexEnabled true
        //for gradle plugin 1.5: Vector Drawables
        generatedDensities = []
    }

    // TODO since now we are using gralde plugin 2.0, we don't need additional params
    // TODO for gradle plugin 1.5: Vector Drawables
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    buildTypes {
        debug {
            buildConfigField "String", "SERVER_URL", '"https://bid.dhis2.org/epireg"'
            buildConfigField "String", "USERNAME", '"erling_all"'
            buildConfigField "String", "PASSWORD", '"Erling123"'

            // disabling crashlytics for debug builds
            ext.enableCrashlytics = false
        }
        release {
            buildConfigField "String", "SERVER_URL", '""'
            buildConfigField "String", "USERNAME", '""'
            buildConfigField "String", "PASSWORD", '""'

            // enabling crashlytics for debug builds
            ext.enableCrashlytics = true
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    dexOptions {
        javaMaxHeapSize "2g"
    }
}

dependencies {

    // Local
    compile project(':core-android')
    compile project(':core-rules')
    compile project(':ui')

    // Dependencies for testing
    testCompile "junit:junit:${libs.jUnitVersion}"

    // Google
    compile "com.android.support:appcompat-v7:${libs.supportVersion}"

    // Dagger dependencies
    provided "com.google.dagger:dagger-compiler:${libs.dagger}"
    apt "com.google.dagger:dagger-compiler:${libs.dagger}"
    compile "com.google.dagger:dagger:${libs.dagger}"

    // Smooth progress bar:
    compile "com.github.castorflex.smoothprogressbar:library:${libs.smoothProgressBarVersion}"

    // Square/Jake Wharton
    compile "com.jakewharton.timber:timber:${libs.timberVersion}"
    compile "com.squareup.okhttp3:logging-interceptor:${libs.okhttpVersion}"

    // Fabric
    compile("com.crashlytics.sdk.android:crashlytics:${libs.crashlyticsVersion}@aar") {
        transitive = true;
    }

    // Multidex:
    compile "com.android.support:multidex:${libs.multidex}"

    // Stetho
    debugCompile "com.facebook.stetho:stetho:${libs.stethoVeirsion}"
    debugCompile "com.facebook.stetho:stetho-okhttp3:${libs.stethoVersion}"
}
